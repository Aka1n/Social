{"version":3,"sources":["components/FindUsres/FindUsers.module.css","components/FindUsres/FindUsersUser/FindUsersUser.module.css","common/NotFound/NotFound.module.css","components/FindUsres/FindUsersUser/FindUsersUser.tsx","common/NotFound/NotFound.jsx","components/FindUsres/Pagination.tsx","components/FindUsres/FindUsers.tsx"],"names":["module","exports","FindUsersUser","id","photos","followed","userFollowLoading","followUnFollow","name","status","addDialog","className","classes","user","body","addfriend","to","avatar","src","small","img","alt","disabled","some","userId","onClick","button","info","row","from","NotFound","text","notfound","icon","faSearch","Pagination","pageNumber","totalPages","searchUsers","setPage","dispatch","mass","i","push","page","active","length","filter","props","children","FindUsers","findUsersPage","useSelector","state","useDispatch","users","isLoading","useState","setText","useMemo","setPageNumber","useEffect","getUsers","AddUsers","map","follow","getFollowThunk","findUsers","title","search","onChange","func","ms","timeoutID","args","target","value","clearTimeout","f","apply","setTimeout","debounceOnChange","e","setSearchUsers","placeholder","Loading","pages","arrow","faCaretLeft","faCaretRight"],"mappings":"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","file":"static/js/3.0eefa832.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"findUsers\":\"FindUsers_findUsers__2J3CZ\",\"title\":\"FindUsers_title__11aEc\",\"row\":\"FindUsers_row__1ou7G\",\"body\":\"FindUsers_body__36IpN\",\"button\":\"FindUsers_button__21rDb\",\"active\":\"FindUsers_active__2Cn65\",\"pages\":\"FindUsers_pages__3o-G8\",\"page\":\"FindUsers_page__1ZTXD\",\"arrow\":\"FindUsers_arrow__3Hoo4\",\"search\":\"FindUsers_search__3UIFr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"FindUsersUser_user__36Rh5\",\"body\":\"FindUsersUser_body__3M8Y-\",\"addfriend\":\"FindUsersUser_addfriend__1AEr7\",\"avatar\":\"FindUsersUser_avatar__2V61o\",\"button\":\"FindUsersUser_button__2rYQ6\",\"row\":\"FindUsersUser_row__IOBEb\",\"info\":\"FindUsersUser_info__kLO24\",\"name\":\"FindUsersUser_name__2Pz7W\",\"from\":\"FindUsersUser_from__2oTOm\",\"status\":\"FindUsersUser_status__3s8_T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notfound\":\"NotFound_notfound__ZpNGW\",\"icon\":\"NotFound_icon__3OxSV\",\"text\":\"NotFound_text__3o7_U\"};","import classes from './FindUsersUser.module.css'\r\nimport img from '../../../img/default-user.png'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {FC} from \"react\";\r\nimport {PhotosType} from \"../../../types/types\";\r\n\r\ntype Props = {\r\n    id: number,\r\n    photos: PhotosType\r\n    followed: boolean\r\n    userFollowLoading: Array<number>\r\n    followUnFollow: (id: number, follow: boolean) => Promise<void>\r\n    name: string\r\n    status: string | null\r\n    addDialog: (userId: number) => Promise<void>\r\n\r\n}\r\n\r\nconst FindUsersUser:FC<Props> = ({id, photos, followed, userFollowLoading,\r\n                                     followUnFollow, name, status, addDialog}) => {\r\n\r\n    return (\r\n        <div className={classes.user}>\r\n            <div className={classes.body}>\r\n                <div className={classes.addfriend}>\r\n                    <NavLink to={`/profile/${id}`}>\r\n                        <img className={classes.avatar}\r\n                             src={(photos.small === null) ? img : photos.small } alt=\"\"/>\r\n                    </NavLink>\r\n                    <div>\r\n                    {(followed)\r\n                        ? <button disabled={userFollowLoading.some(userId => userId === id)}\r\n                                                onClick={() => {followUnFollow(id, followed)}}\r\n                                                className={classes.button}>Un-follow</button>\r\n                        : <button disabled={userFollowLoading.some(userId => userId === id)}\r\n                                  onClick={() => {\r\n                                      followUnFollow(id, followed)}\r\n                                  }\r\n                                  className={classes.button}>Follow</button> }\r\n                        <NavLink to={`/dialogs/${id}`} onClick={() => addDialog(id)} >\r\n                            <button className={classes.button}>Message</button>\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.info}>\r\n                    <div className={classes.row}>\r\n                        <div className={classes.name}>{name}</div>\r\n                        <div className={classes.from}></div>\r\n                    </div>\r\n                    <div className={classes.status}>{status}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FindUsersUser","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\r\nimport classes from \"./NotFound.module.css\";\r\nimport * as React from \"react\";\r\n\r\nconst NotFound = ({text}) => {\r\n    return <div className={classes.notfound}>\r\n        <FontAwesomeIcon className={classes.icon} icon={faSearch} />\r\n        <h2 className={classes.text}>{text}</h2>\r\n    </div>\r\n}\r\n\r\nexport default NotFound","import classes from \"./FindUsers.module.css\";\r\nimport * as React from \"react\";\r\nimport {FC} from \"react\";\r\n\r\ntype Props =  {\r\n    pageNumber: number\r\n    totalPages: number\r\n    setPage: (page: number, searchUsers: string) => void\r\n    dispatch: (func: any) => void\r\n    searchUsers: string\r\n}\r\n\r\n\r\nconst Pagination: FC<Props> = ({pageNumber, totalPages,searchUsers, setPage, dispatch}) => {\r\n\r\n    let mass = [] as Array<JSX.Element>\r\n\r\n    for (let i: number =\r\n        pageNumber === totalPages - 2 ? pageNumber - 2 :\r\n            pageNumber === totalPages - 1 ? pageNumber - 3 :\r\n                pageNumber === totalPages ? pageNumber - 4 :\r\n                    pageNumber >= 3 ? pageNumber - 2 :\r\n                        pageNumber === 2 ? pageNumber - 1 :\r\n                            pageNumber === 1 ? pageNumber : 0; totalPages >= i; i++) {\r\n        mass.push(\r\n            <div key={i}\r\n                 onClick={() => dispatch(setPage(i, searchUsers))}\r\n                 className={pageNumber === i ? `${classes.page} ${classes.active}` : classes.page}>{i}\r\n            </div>)\r\n        if (mass.length >= 5) {\r\n            return <>{mass.filter((page:JSX.Element) => page.props.children > 0)}</>\r\n        }\r\n    }\r\n    return <>{mass}</>\r\n}\r\n\r\nexport default Pagination","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getFollowThunk,\r\n    setPage, getUsers, setSearchUsers, setPageNumber,\r\n} from \"../../redux/findUsers-reducer\";\r\nimport * as React from \"react\";\r\nimport FindUsersUser from \"./FindUsersUser/FindUsersUser\";\r\nimport classes from \"./FindUsers.module.css\";\r\nimport {ChangeEvent, FC, useEffect, useMemo, useState} from \"react\";\r\nimport Loading from \"../../common/Loading/Loading\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCaretLeft, faCaretRight} from \"@fortawesome/free-solid-svg-icons\";\r\nimport NotFound from \"../../common/NotFound/NotFound\";\r\nimport Pagination from \"./Pagination\";\r\nimport {AppDispatch, RootState} from \"../../redux/redux-store\";\r\nimport {UserType} from \"../../types/types\";\r\nimport {addDialog} from \"../../redux/dialogs-reducer\";\r\n\r\ntype Users = {\r\n    users: Array<UserType>\r\n}\r\n\r\nconst FindUsers:FC = () => {\r\n\r\n    const findUsersPage = useSelector((state: RootState) => state.findUsersPage)\r\n\r\n    const dispatch: AppDispatch = useDispatch()\r\n\r\n    const {users ,totalPages, pageNumber, isLoading, userFollowLoading, searchUsers} = findUsersPage\r\n\r\n    const [text, setText] = useState(searchUsers)\r\n\r\n\r\n    useMemo(() => {\r\n        dispatch(setPageNumber(1))\r\n    }, [searchUsers])\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsers(users.length, pageNumber, searchUsers))\r\n    }, [searchUsers])\r\n\r\n\r\n    const AddUsers:FC<Users> = ({users}) => useMemo(() => {\r\n\r\n        if (users.length === 0) return <NotFound text=\"Users not found\"/>\r\n\r\n         return (\r\n             <>{\r\n                 users.map((user) => <FindUsersUser id={user.id}\r\n                                                    key={user.id}\r\n                                                    followed={user.followed}\r\n                                                    name={user.name}\r\n                                                    status={user.status}\r\n                                                    photos={user.photos}\r\n                                                    userFollowLoading={userFollowLoading}\r\n                                                    addDialog={(userId: number) => dispatch(addDialog(userId))}\r\n                                                    followUnFollow={\r\n                                                        (id: number, follow: boolean) => dispatch(getFollowThunk(id, follow))}/>)\r\n             }</>\r\n         )\r\n    },[searchUsers])\r\n\r\n    const debounceOnChange = (func: (e: ChangeEvent<HTMLInputElement>) => void, ms: number) => {\r\n        let timeoutID: ReturnType<typeof setTimeout>\r\n        return function (...args: any) {\r\n            setText(args[0].target.value)\r\n            clearTimeout(timeoutID)\r\n            const f = () => func.apply(this, args)\r\n            timeoutID = setTimeout(f, ms)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.findUsers}>\r\n            <div className={classes.title}>Users</div>\r\n            <input className={classes.search}\r\n                   onChange={debounceOnChange((e) => dispatch(setSearchUsers(e.target.value)),500)}\r\n                   value={text}\r\n                placeholder=\"&#xf002;   Search...\"/>\r\n            <div className={classes.row}>\r\n                {!isLoading ? <div className={classes.body}>{<AddUsers users={users}/>}</div> : <Loading/> }\r\n                <div className={classes.pages}>\r\n                    {pageNumber > 3 && totalPages >= 5 ? <FontAwesomeIcon className={classes.arrow}\r\n                                                               onClick={() => dispatch(setPage(1, searchUsers))}\r\n                                                               icon={faCaretLeft}/> : null}\r\n                    <Pagination pageNumber={pageNumber}\r\n                                totalPages={totalPages}\r\n                                setPage={setPage}\r\n                                searchUsers={searchUsers}\r\n                                dispatch={dispatch}/>\r\n                    {pageNumber < totalPages - 2 && totalPages >= 5\r\n                        ? <FontAwesomeIcon className={classes.arrow}\r\n                                           onClick={() => dispatch(setPage(totalPages, searchUsers))}\r\n                                           icon={faCaretRight}/> : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FindUsers\r\n\r\n"],"sourceRoot":""}